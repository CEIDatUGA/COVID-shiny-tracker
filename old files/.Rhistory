library(tidyverse)
library(readxl)
world_pop_modified <- readxl::read_excel("./world_pops_modified.xlsx")
world_pop_modified <- world_pop_modified %>% dplyr::mutate(country_pop = country_pop * 1000)
world_cases <- readr::read_csv("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv")
unique(world_pop_modified$country)
unique(world_cases$`Country/Region`)
xx <- world_cases %>% select(c(`Country/Region`, `Province/State`))
world_cases <- world_cases %>% rename(country = `Country/Region`)
world_test <- merge(world_cases, world_pop_modified)
view <- world_test %>% select(c(country, `Province/State`, country_pop))
unique(view$country)
world_cases <- readr::read_csv("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv")
View(world_cases)
View(world_cases)
View(world_cases)
world_cases_1 <- aggregate(. ~ `Country/Region`, world_cases, FUN = sum)
glimpse(world_cases)
world_cases_1 <- world_cases %>% dplyr::select(c(-`Province/State`, Lat, Long))
world_cases_1 <- world_cases %>% dplyr::select(c(-`Province/State`, -Lat, -Long))
View(world_cases_1)
world_cases_2 <- aggregate(. ~ `Country/Region`, world_cases, FUN = sum)
glimpse(world_cases)
world_cases_2 <- aggregate(`Country/Region` ~ ., world_cases, FUN = sum)
world_cases_2 <- aggregate(. ~ `Country/Region`, world_cases, FUN = sum)
world_cases_1 <- world_cases_1 %>% dplyr::mutate_if(is.factor, as.numeric)
world_cases_1 <- world_cases_1 %>% dplyr::mutate_if(is.factor, as.numeric)
world_cases_2 <- aggregate(. ~ `Country/Region`, world_cases, FUN = sum)
world_cases_1 <- world_cases %>% dplyr::select(c(-`Province/State`, -Lat, -Long))
world_cases_2 <- aggregate(. ~ `Country/Region`, world_cases_1, FUN = sum)
View(world_cases_2)
View(world_cases)
View(world_cases_2)
View(world_cases_2)
world_cases <- readr::read_csv("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv")
world_cases_1 <- world_cases %>% dplyr::select(c(-`Province/State`, -Lat, -Long)) %>%
aggregate(. ~ `Country/Region`, world_cases_1, FUN = sum)
world_cases <- world_cases %>% dplyr::select(c(-`Province/State`, -Lat, -Long)) %>%
aggregate(. ~ `Country/Region`, world_cases, FUN = sum)
world_cases <- world_cases %>% dplyr::select(c(-`Province/State`, -Lat, -Long))
world_cases <- aggregate(. ~ `Country/Region`, world_cases, FUN = sum)
world_cases <- readr::read_csv("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv")
world_cases <- world_cases %>% dplyr::select(c(-`Province/State`, -Lat, -Long))
#world_cases_1 <- world_cases_1 %>% dplyr::mutate_if(is.factor, as.numeric)
world_cases <- aggregate(. ~ `Country/Region`, world_cases, FUN = sum)
world_cases <- readr::read_csv("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv")
world_cases <- world_cases %>% dplyr::select(c(-`Province/State`, -Lat, -Long)) %>%
aggregate(. ~ `Country/Region`, FUN = sum)
word_deaths <- read_csv("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_deaths_global.csv")
View(word_deaths)
world_deaths <- world_deaths %>% dplyr::select(c(-`Province/State`, -Lat, -Long))
world_deaths <- read_csv("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_deaths_global.csv")
world_deaths <- world_deaths %>% dplyr::select(c(-`Province/State`, -Lat, -Long))
world_deaths <- aggregate(. ~ `Country/Region`, world_deaths, FUN = sum)
View(world_deaths)
world_cases <- world_cases %>% dplyr::select(c(-`Province/State`, -Lat, -Long))
world_cases <- aggregate(. ~ `Country/Region`, world_cases, FUN = sum)
xx<-merge(world_cases, world_deaths)
View(xx)
View(world_cases)
View(world_deaths)
xx<-merge(world_cases, world_deaths, by = `Country/Region`)
View(world_deaths)
library(shiny); runApp('COVID-shiny-tracker/app_4_2.R')
runApp('COVID-shiny-tracker/app_4_2.R')
runApp('COVID-shiny-tracker/app_4_2.R')
world_cases <- readr::read_csv("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv")
world_cases <- world_cases %>% dplyr::select(c(-`Province/State`, -Lat, -Long))
world_cases <- aggregate(. ~ `Country/Region`, world_cases, FUN = sum)
unique(world_cases$`Country/Region`)
world_cases <- readr::read_csv("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv")
View(world_cases)
world_pop_modified <- readxl::read_excel("./world_pops_modified.xlsx")
View(world_pop_modified)
View(world_pop_modified)
world_pop_modified <- world_pop_modified %>% dplyr::mutate(country_pop_in_thousands = country_pop_in_thousands * 1000)
View(world_pop_modified)
world_pop_modified <- world_pop_modified %>% dplyr::mutate(country_pop = country_pop_in_thousands * 1000)
world_pop_modified <- world_pop_modified %>% dplyr::mutate(country_pop = country_pop_in_thousands * 1000) %>%
dplyr::select(c(country, country_pop))
View(world_pop_modified)
world_cases <- readr::read_csv("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv")
world_cases <- world_cases %>% dplyr::select(c(-`Province/State`, -Lat, -Long))
world_cases <- aggregate(. ~ `Country/Region`, world_cases, FUN = sum)
world_cases <- world_cases %>% rename(country = `Country/Region`)
View(world_cases)
View(world_pop_modified)
world_test <- merge(world_cases, world_pop_modified)
View(world_test)
View(world_pop_modified)
#Create world population RDS
world_pop <- readxl::read_excel("./world_pops_modified.xlsx")
world_pop <- world_pop_modified %>%
dplyr::mutate(country_pop = country_pop_in_thousands * 1000) %>%
dplyr::select(c(country, country_pop))
#Create world population RDS
world_pop <- readxl::read_excel("./world_pops_modified.xlsx")
world_pop <- world_pop %>%
dplyr::mutate(country_pop = country_pop_in_thousands * 1000) %>%
dplyr::select(c(country, country_pop))
View(world_pop)
world_pop_modified <- readxl::read_excel("./world_pops_modified.xlsx")
saveRDS(world_pop, 'world_popsize')
#Create world population RDS
world_pop <- readxl::read_excel("./world_pops_modified.xlsx")
world_pop <- world_pop %>%
dplyr::mutate(country_pop = country_pop_in_thousands * 1000) %>%
dplyr::select(c(country, country_pop))
d <- readRDS("./world_popsize")
#Create world population RDS
world_pop <- readxl::read_excel("./world_pops_modified.xlsx")
world_pop <- world_pop %>%
dplyr::mutate(country_pop = country_pop_in_thousands * 1000) %>%
dplyr::select(c(country, country_pop))
getwd()
getwd()
getwd()
setwd("C:/Users/17033/Desktop/shiny_covid/COVID-shiny-tracker/old files")
library(tidyverse)
library(readxl)
#Create world population RDS
world_pop <- readxl::read_excel("./world_pops_modified.xlsx")
library(tidyverse)
library(readxl)
#Create world population RDS
world_pop <- readxl::read_excel("./world_pops_modified.xlsx")
world_pop <- world_pop %>%
dplyr::mutate(country_pop = country_pop_in_thousands * 1000) %>%
dplyr::select(c(country, country_pop))
saveRDS(world_pop, file = "../world_popsize.rds")
runApp('C:/Users/17033/Desktop/shiny_covid/COVID-shiny-tracker/app_4_2.R')
if (file.exists('cleandata.RDS') && as.Date(file.mtime('cleandata.RDS')) ==  Sys.Date()) {
#################################
# load already clean data locally
#################################
us_clean <- readRDS('cleandata.RDS')
} else {
#################################
# pull data from Covidtracking and process
#################################
us_data <- read_csv("http://covidtracking.com/api/states/daily.csv")
us_clean <- us_data %>% dplyr::select(c(date,state,positive,negative,total,hospitalized,death)) %>%
mutate(date = as.Date(as.character(date),format="%Y%m%d")) %>%
group_by(state) %>% arrange(date) %>%
mutate(daily_positive = c(0,diff(positive))) %>%
mutate(daily_negative = c(0,diff(negative))) %>%
mutate(daily_total = c(0,diff(total))) %>%
mutate(daily_hospitalized = c(0,diff(hospitalized))) %>%
mutate(daily_death = c(0,diff(death)))
saveRDS(us_clean,'cleandata.RDS')
if (file.exists('cleandata.RDS') && as.Date(file.mtime('cleandata.RDS')) ==  Sys.Date()) {
#################################
# load already clean data locally
#################################
us_clean <- readRDS('cleandata.RDS')
} else {
#################################
# pull data from Covidtracking and process
#################################
us_data <- read_csv("http://covidtracking.com/api/states/daily.csv")
us_clean <- us_data %>% dplyr::select(c(date,state,positive,negative,total,hospitalized,death)) %>%
mutate(date = as.Date(as.character(date),format="%Y%m%d")) %>%
group_by(state) %>% arrange(date) %>%
mutate(daily_positive = c(0,diff(positive))) %>%
mutate(daily_negative = c(0,diff(negative))) %>%
mutate(daily_total = c(0,diff(total))) %>%
mutate(daily_hospitalized = c(0,diff(hospitalized))) %>%
mutate(daily_death = c(0,diff(death)))
saveRDS(us_clean,'cleandata.RDS')
}
View(us_clean)
runApp('C:/Users/17033/Desktop/shiny_covid/COVID-shiny-tracker/app_4_2.R')
